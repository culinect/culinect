rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow read access to posts, blogs, and recipes for non-logged-in users
    match /posts/{postId} {
      allow read;
    }

    match /blogs/{blogId} {
      allow read;
    }

    match /recipes/{recipeId} {
      allow read;
    }

    // Users collection rules
    match /users/{userId} {
      allow create, read, update, delete: if request.auth != null && request.auth.uid == userId;

      match /followers/{followerId} {
        allow create, read, update, delete: if request.auth != null && request.auth.uid == userId;
      }

      match /following/{followingId} {
        allow create, read, update, delete: if request.auth != null && request.auth.uid == userId;
      }

      match /resume/{resumeId} {
        allow create, read, update, delete: if request.auth != null && request.auth.uid == userId;
      }
    }

    // Likes and saves collection rules (for authenticated users)
    match /likes/{postId} {
      allow create, delete: if request.auth != null;
    }

    match /saves/{postId} {
      allow create, delete: if request.auth != null;
    }

    // Jobs collection rules
    match /jobs/{jobId} {
      allow create, read, update, delete: if request.auth != null && request.resource.data.createdBy == /databases/$(database)/documents/users/$(request.auth.uid);
    }
    // Jobs collection rules
    match /jobs/{jobId} {
      // Allow anyone to create a document, and the creator to read/update/delete their own documents
      allow create: if request.auth != null;
      allow read, update, delete: if request.auth != null && request.resource.data.createdBy == /databases/$(database)/documents/users/$(request.auth.uid);
    }

    // Recipes collection rules
    match /recipes/{recipeId} {
      allow create: if request.auth != null;
      allow read, update, delete: if request.auth != null && request.resource.data.author == /databases/$(database)/documents/users/$(request.auth.uid);
    }

    // Hotels collection rules
    match /hotels/{hotelId} {
      allow create: if request.auth != null;
      allow read, update, delete: if request.auth != null && request.resource.data.addedBy == /databases/$(database)/documents/users/$(request.auth.uid);
    }

    // Blogs collection rules
    match /blogs/{blogId} {
      allow create: if request.auth != null;
      allow read, update, delete: if request.auth != null && request.resource.data.author == /databases/$(database)/documents/users/$(request.auth.uid);
    }

    // Videos collection rules
    match /videos/{videoId} {
      allow create: if request.auth != null;
      allow read, update, delete: if request.auth != null && request.resource.data.author == /databases/$(database)/documents/users/$(request.auth.uid);
    }

    // Messages collection rules
    match /messages/{chatId} {
      // Allow a user to create a chat or send a message if they are part of the chat members
      allow create: if request.auth != null && request.resource.data.members.hasAny([request.auth.uid]);

      match /messages/{messageId} {
        allow create: if request.auth != null && get(/databases/$(database)/documents/messages/$(chatId)).data.members.hasAny([request.auth.uid]);
        allow read: if request.auth != null && get(/databases/$(database)/documents/messages/$(chatId)).data.members.hasAny([request.auth.uid]);
      }
    }

    // Usernames collection rules
    match /usernames/{username} {
      // Allow anyone to check for username availability (read)
      allow read;
      // Allow authenticated users to create a new username (write)
      allow write: if request.auth != null;
    }

    // Emails collection rules
    match /emails/{email} {
      // Allow anyone to check for email availability (read)
      allow read;
      // Allow authenticated users to create a new email (write)
      allow write: if request.auth != null;
    }

    // PhoneNumbers collection rules
    match /phoneNumbers/{phoneNumber} {
      // Allow anyone to check for phone number availability (read)
      allow read;
      // Allow authenticated users to create a new phone number (write)
      allow write: if request.auth != null;
    }
  }
}
